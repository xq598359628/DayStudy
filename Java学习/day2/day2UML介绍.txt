
1UML的概念及用途。
	
	UML是一种用于描述、记录软件分析设计的工具。包括用例图、类图、组件图、部署图、顺序图、活动图、状态机图。
	
2用例图

	用例图是用于描述系统提供的系列功能，而每个用例则代表系统的一个功能模块。用例图主要是用来帮助开发团队以一种可视化的方式来理解系统的需求功能。
	用例图主要在需求分析阶段使用。
	
	用法：
	
		用例图包括用例、角色、角色和用例之间的关系，以及系统内用例之间的关系。
		用例：椭圆表示，用例的名称放在椭圆的中心或椭圆下面。
		角色：与系统交互的实体，用人形来表示。
		角色和用例之间的关系：简单的线段来表示。
		
3类图

	类图表示系统中应该包含哪些实体类，各实体类之间如何关联。它显示了系统的静态结构。
	
	用法：
	
		类图是用包含了三个部分的矩形来描述，最上面类名，中间属性，底下方法。
		-表示Private +public #protected
		
	类与类之间的关系：
		
		关联。分为单向关联和双向关联。带箭头的实线表示单向关联。不带箭头表示双向关联。一个对象能访问关联对象的数目被称为多重性。
			  关联中有两种特殊的关系：聚合和组合。组合比聚合更严格，当某个实体聚合成另一个实体时，该实体还可以同时是另一个实体的一部分，组合不行。
									  聚合使用空心菱形框的实线表示。组合使用实心菱形框表示。
		泛化：就是继承。extends用带空心三角形的实线来表示。
						implements用带空心三角形的虚线来表示
		
		依赖：带箭头的虚线表示，箭头指向依赖的类。
		
4组件图

	组件图提供系统的物理视图，它的用途是显示系统中的软件对其他软件(例如函数库)的依赖关系。
	
	用法：
		组件图通常包含组件、接口和Port等图元，UML使用带组件符号的矩形来表示组件。
		使用圆圈来表示接口，使用位于组件边界上的小矩形来代表Port。
		组件的接口表示它能对外提供的服务规范。通常有两种表现形式：
			用一条实线连接到组件边界的圆圈表示
			使用位于组件内部的圆圈表示
		组件除了可以对外提供服务接口外，还可能依赖某个接口，用一条带半圆的实线来表示。

5部署图

	部署图用于描述软件系统如何部署到硬件环境中，它的用途是显示软件安系统不同的组件将在何处物理运行，以及它们如何彼此通信。
	
	用法：
		
		部署图中的符号包括组件图中使用的符号。还增加了节点的概念。
		节点：各种计算资源的通用名称，主要包括处理器和设备两种类型。两者的区别是处理器能够执行程序的硬件构件。如计算机主机和打印机。
			  UML使用三位立方体表示节点，节点的名称位于顶部。
			 
6顺序图
	
	顺序图用于显示具体用例或者是用例的一部分的详细流程，并且显示流程中不同对象之间的调用关系，同时还可以很详解地显示不同对象的不同调用。
	顺序图描述了对象之间的交互，重点在于描述消息及时间顺序。
	顺序图有两个维度。垂直维度表示时间顺序显示消息/调用的顺序。水平维度表示消息被发送到的对象实例。
	
	用法：
		
		顶部每个框表示每个类的实例，框中的类实例名称和类名称之间用冒号或空格来分隔。
		如果某个类实例向另一个类实例发送一条消息，则绘制一条指向接受实例的带箭头的实线，并把消息/方法的名称放在连线上面。
		对于重要的消息，还可以绘制一条带箭头的指向发起类实例的虚线，将返回值标注在虚线上。
		
7活动图
		
	活动图和状态机图都被称为演化图。
	活动图：用于描述用例内部的活动或方法的流程，如果除去活动图中的并行活动描述，它就变成流程图。
			活动图主要用于描述过程原理、业务逻辑以及工作流技术。
			
	用法：
	
		圆角矩形表示活动，带箭头的实线表示事件。菱形框表示条件。
		整个活动图只有一个开始活动，可以有多个结束活动。
		实心圆表示起点 
		包含实心圆的圆 表示终点。
		
8状态机图

	表示某个对象所处的不同状态和该类额状态转换信息。在系统活动期间具有三个或更多潜在状态的对象才需要考虑使用状态机图。
	用法和活动图相似。
	
	
	

		
			